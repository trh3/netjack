{
    "collab_server" : "",
    "contents" : "#' Format and print an argument list.\n#'\n#' Internal function for pretty printing argument lists.\n#'\n#' @param arg.list list of arguments to format.\n#'\n#' @return Formatted argument list\n#' @export\n#' @keywords internal\n#'\npretty_print_arg_list = function(arg.list){\n  temp = \"\\n\"\n  for(i in 1:(length(arg.list)-1)){\n  temp = c(temp,paste(\"\\t\",names(arg.list)[i], \" = \", arg.list[[i]], \"\\n\", sep = \"\"))\n  }\n  return(c(temp,paste(\"\\t\",names(arg.list)[length(arg.list)], \" = \", arg.list[[length(arg.list)]], sep = \"\")))\n}\n\n#' An S4 class to represent a single network.\n#'\n#'This class represents a single observation of a network, with associated node level variables.\n#'\n#'For constructor see: \\code{\\link{as_Net}}\n#'\n#' @slot net matrix. The network represented as an adjacency matrix.\n#' @slot net.name character. The name of the network (e.g. subject ID, school name)\n#' @slot node.variables list. A named list of node variables, in the same order as the adjacency matrix.\n#'\n#' @export\n#'\nsetClass(\"Net\",slots =c(\n  net = \"matrix\",\n  net.name = \"character\",\n  node.variables = \"list\"))\n\n#' An S4 class to represent a sample of networks\n#'\n#' This class represents a collection of networks, with associated network level variables.\n#'\n#' For constructor see: \\code{\\link{as_NetSample}}\n#'\n#' @slot nets list. A list of Net objects\n#' @slot net.names character. A character vector representing the names of the net objects\n#' @slot sample.variables list. A named list of network level variables.\n#'\n#' @export\n#'\nsetClass(\"NetSample\",\n                      slots = c(\n                        nets = \"list\",\n                        net.names = \"character\",\n                        sample.variables = \"list\"\n                      ))\n\n\n#' An S4 class representing a single network with a network permutation function applied to it.\n#'\n#' This class represents the results of applying a network permutation function, such as a jackknife, or rewiring algorithm, to a single network.\n#'\n#' For constructor see: For constructor see: \\code{\\link{net_apply}}\n#'\n#' @slot fun.name character. The name of the network permutation function applied\n#' @slot fun function. The permutation function applied\n#' @slot fun.args list. The arguments supplied to the permutation function\n#' @slot orig.net Net. The original network\n#' @slot orig.net.name character. The name of the original network\n#' @slot nets list. A list of Net objects, each corresponding to a instance of the manipulated original network\n#' @slot nets.names character. The names of the manipulated networks.\n#' @slot node.variables list. Node variables of the original network\n#' @slot iter logical. A flag to indicate that the permutation function was repeated with the same arguements. Currently unused.\n#'\n#' @export\n#'\nsetClass(\"NetSet\",slots =c(\n         fun.name = \"character\",\n         fun = \"function\",\n         fun.args = \"list\",\n         orig.net = \"Net\",\n         orig.net.name = \"character\",\n         nets = \"list\",\n         nets.names = \"character\",\n         node.variables = \"list\",\n         iter = \"logical\"))\n\n\n#' An S4 class representing a sample of networks with a network permutation function applied to it.\n#'\n#' This class represents the results of applying a network permutation function, such as a jackknife, or rewiring algorithm, to a sample of networks.\n#'\n#' @slot net.sets list. A list of NetSet objects, reach representing a network, and the results of applying the permutation function.\n#' @slot net.names character. A character vector representing the names of the original network in the sample\n#' @slot sample.variables list. A list representing sample level variables.\n#'\n#' @inheritParams NetSet\n#' @export\n#'\nsetClass(\"NetSampleSet\",slots =c(\n  fun.name = \"character\",\n  fun = \"function\",\n  fun.args = \"list\",\n  net.sets = \"list\",\n  net.names = \"character\",\n  sample.variables = \"list\"\n))\n\n\n\n\n#'@rdname show-Net\nsetMethod(\"show\", \"NetSet\",\n          function(object){\n\n            cat(\"Net Set\",\"\\n\",\n                \"Applied Function: \", object@fun.name, \"\\n\",\n                \"Function Arguments: \", pretty_print_arg_list(object@fun.args), \"\\n\",\n                \"Original Network Name: \",object@orig.net.name, \"\\n\",\n                \"Contains \" ,length(object@nets), \" networks.\", sep = \"\"\n                )\n          })\n\n#'@rdname show-Net\nsetMethod(\"names\", \"NetSet\",\n          function(x){\n            return(x@nets.names)\n          })\n\n\n\n#' An S4 class representing the results of applying a network statistic function to a single NetSet object.\n#'\n#' This class represents the results of applying a network statistic function to a single NetSet object. This class contains the results for the original network, as well as for each instance of the permuted/manipulated networks.\n#'\n#' @slot stat.fun function. The network statistic function applied\n#' @slot stat.fun.name character. The name of the network statistic function\n#' @slot stat.fun.args list. Additional arguments the network statistic function took\n#' @slot orig.net.name character. The name of the original network.\n#' @slot orig.net.stat numeric. The value of the network statistic calculated on the original network.\n#' @slot nets.stat list. A list of values of the network statistic applied to the manipulated networks\n#' @slot nets.names character. Names of the manipulated networks.\n#' @inheritParams NetSet\n#' @export\n#'\nsetClass(\"NetStatSet\", slots =c(fun = \"function\",\n         fun.name = \"character\",\n         fun.args = \"list\",\n         stat.fun = \"function\",\n         stat.fun.name = \"character\",\n         stat.fun.args = \"list\",\n         orig.net.name = \"character\",\n         orig.net.stat = \"numeric\",\n         nets.stat = \"list\",\n         nets.names = \"character\"))\n\n\n#' An S4 class representing the results of applying a network statistic function to a  NetSampSet object.\n#'\n#' This class represents the results of applying a network statistic function to a NetSampSet object. This class contains the results for the original networks, as well as for each instance of the permuted/manipulated networks.\n#'\n#' @slot stat.fun function. The network statistic function applied\n#' @slot stat.fun.name character. The name of the network statistic function\n#' @slot stat.fun.args list. Additional arguments the network statistic function took\n#' @slot orig.net.name character. The name of the original network.\n#' @slot orig.net.stat numeric. The value of the network statistic calculated on the original network.\n#' @slot nets.stat list. A list of values of the network statistic applied to the manipulated networks\n#' @slot nets.names character. Names of the manipulated networks.\n#' @slot sample.variables list. A list of sample level variables.\n#' @inheritParams NetSet\n#' @export\n#'\nsetClass(\"NetSampleStatSet\", slots =c(fun = \"function\",\n                                              fun.name = \"character\",\n                                              fun.args = \"list\",\n                                              stat.fun = \"function\",\n                                              stat.fun.name = \"character\",\n                                              stat.fun.args = \"list\",\n                                              nets.stat = \"list\",\n                                              net.names = \"character\",\n                                              sample.variables = \"list\"\n                                              ))\n\n\n#'@rdname show-Net\nsetMethod(\"show\", \"NetStatSet\",\n          function(object){\n            cat(\"Net Statistic Set\",\"\\n\",\n                \"Applied Function: \", object@fun.name, \"\\n\",\n                \"Function Arguments: \", do.call(cat,list(object@fun.args, sep = \"\\n\")), \"\\n\",\n                \"Applied Statistic Function: \", object@stat.fun.name, \"\\n\",\n                \"Statistic Function Arguments: \", object@stat.fun.args, \"\\n\",\n                \"Original Network Name: \",object@orig.net.name, \"\\n\"\n            )\n          })\n\n\n#' Convenience Functions for printing information about Net-type objects\n#'@param object,x Object to print\n#'@name show-Net\n#'\nNULL\n\n\n\n",
    "created" : 1526657151665.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2406806946",
    "id" : "4FD67203",
    "lastKnownWriteTime" : 1526668668,
    "last_content_update" : 1526668668714,
    "path" : "E:/Dropbox/netjack/R/AllClasses.R",
    "project_path" : "R/AllClasses.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}