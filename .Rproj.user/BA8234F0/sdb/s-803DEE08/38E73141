{
    "collab_server" : "",
    "contents" : "#' Network Manipulation Functions\n#'\n#'@name network_statistics\n#'\nNULL\n\n\n#' Computes global efficiency\n#'\n#' @param Net Input Net\n#'\n#' @return global efficiency value\n#' @export\n#'\n#' @rdname network_statistics\nglobal_efficiency <- function(Net){\n\n  net <- igraph::graph.adjacency(Net@net, mode = \"undirected\", weighted = T, diag = F)\n  globEff <- brainGraph::efficiency(net,type=\"global\")\n    return(globEff)\n}\n\n#' Computes modularity with a given partition\n#'\n#' @param community.variable character name of the node variable that represents the partition.\n#'\n#' @return modularity value\n#' @export\n#'\n#' @rdname network_statistics\nmodularity <- function(Net, community.variable){\n\n  net = igraph::graph.adjacency(Net@net, mode = \"undirected\", weighted = T, diag = F)\n  mod = igraph::modularity(net, as.numeric(as.factor(Net@node.variables[[community.variable]])), weights = igraph::E(net)$weight)\n  return(mod)\n}\n\n\n",
    "created" : 1526657906738.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "67351572",
    "id" : "38E73141",
    "lastKnownWriteTime" : 1526668668,
    "last_content_update" : 1526668668640,
    "path" : "E:/Dropbox/netjack/R/network_statistics.R",
    "project_path" : "R/network_statistics.R",
    "properties" : {
    },
    "relative_order" : 5,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}