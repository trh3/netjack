devtools::use_data(GroupA, netjack)
###Generate Test Data
GroupA  = list()
for(i in 1:20){
GroupA[[i]] = matrix(0, 20, 20)
GroupA[[i]][upper.tri(GroupA[[i]])] = rbinom(n = 20*19/2, prob = .2, size = 1)
GroupA[[i]] = t(GroupA[[i]])+ GroupA[[i]]
GroupA[[i]][, 10] = 1
GroupA[[i]][10 ,] = 1
diag(GroupA[[i]]) = 0
}
GroupB  = list()
for(i in 1:20){
GroupB[[i]] = matrix(0, 20, 20)
GroupB[[i]][upper.tri(GroupB[[i]])] = rbinom(n = 20*19/2, prob = .2, size = 1)
GroupB[[i]] = t(GroupB[[i]])+ GroupB[[i]]
GroupB[[i]][, 10] = 1
GroupB[[i]][10 ,] = 1
diag(GroupB[[i]]) = 0
}
devtools::use_data(GroupA, netjack)
devtools::use_data(GroupA)
devtools::use_data(GroupB)
GroupB  = list()
for(i in 1:20){
GroupB[[i]] = matrix(0, 20, 20)
GroupB[[i]][upper.tri(GroupB[[i]])] = rbinom(n = 20*19/2, prob = .2, size = 1)
GroupB[[i]] = t(GroupB[[i]])+ GroupB[[i]]
GroupB[[i]][, 15] = 1
GroupB[[i]][15 ,] = 1
diag(GroupB[[i]]) = 0
}
devtools::use_data(GroupB, overwrite = T)
data("GroupA")
library(netjack)
data("GroupA")
print(GroupA[[1]])
Subject1 <- as_Net(GroupA, "Subject1")
ubject1 <- as_Net(GroupA[[i]], "Subject1")
Subject1 <- as_Net(GroupA[[i]], "Subject1")
show(Subject1)
GroupASamp = as_NetSample(GroupA, node.variables = list(community = c(rep(1,10), rep(2,10))), sample.variables = list(group = rep(1, 20)))
GroupASamp = as_NetSample(GroupA, net.names = 1:20 , node.variables = list(community = c(rep(1,10), rep(2,10))), sample.variables = list(group = rep(1, 20)))
library(netjack)
data("GroupA")
Subject1 <- as_Net(GroupA[[i]], "Subject1")
show(Subject1)
GroupASamp = as_NetSample(GroupA, net.names = 1:20 , node.variables = list(community = c(rep(1,10), rep(2,10))), sample.variables = list(group = rep(1, 20)))
GroupASamp = as_NetSample(GroupA, net.names = as.character(1:20) , node.variables = list(community = c(rep(1,10), rep(2,10))), sample.variables = list(group = rep(1, 20)))
show(GroupASamp)
library(netjack)
data("GroupA")
Subject1 <- as_Net(GroupA[[i]], "Subject1")
show(Subject1)
Subject2 <- as_Net(GroupA[[2]], "Subject1", node.variables = list(community = c(rep(1,10), rep(2,10))))
show(Subject2)
GroupASamp = as_NetSample(GroupA, net.names = as.character(1:20) , node.variables = list(community = c(rep(1,10), rep(2,10))), sample.variables = list(group = rep(1, 20)))
show(GroupASamp)
Sub1Jackknifed <- net_apply(network = Subject1, net.function = "node_jackknife")
show(Sub1Jackknifed)
pretty_print_arg_list = function(arg.list){
temp = "\n"
if(length(arg.list) > 0){
for(i in 1:(length(arg.list)-1)){
temp = c(temp,paste("\t",names(arg.list)[i], " = ", arg.list[[i]], "\n", sep = ""))
}
return(c(temp,paste("\t",names(arg.list)[length(arg.list)], " = ", arg.list[[length(arg.list)]], sep = "")))
}else{
return("")
}
}
Sub1Jackknifed <- net_apply(network = Subject1, net.function = "node_jackknife")
show(Sub1Jackknifed)
GroupAJackknifed <- net_apply(network = GroupASamp, net.function = "node_jackknife")
show(GroupAJackknifed)
library(netjack)
data("GroupA")
Subject1 <- as_Net(GroupA[[i]], "Subject1")
show(Subject1)
Subject2 <- as_Net(GroupA[[2]], "Subject1", node.variables = list(community = c(rep(1,10), rep(2,10))))
show(Subject2)
GroupASamp = as_NetSample(GroupA, net.names = as.character(1:20) , node.variables = list(community = c(rep(1,10), rep(2,10))), sample.variables = list(group = rep(1, 20)))
show(GroupASamp)
Sub1Jackknifed <- net_apply(network = Subject1, net.function = "node_jackknife")
show(Sub1Jackknifed)
GroupAJackknifed <- net_apply(network = GroupASamp, net.function = "node_jackknife")
show(GroupAJackknifed)
GroupANetJackknifed <- net_apply(GroupASamp, net.function = "network_jackknife", net.function.args = list(network.variable = "community"))
show(GroupANetJackknifed)
library(netjack)
data("GroupA")
Subject1 <- as_Net(GroupA[[i]], "Subject1")
show(Subject1)
Subject2 <- as_Net(GroupA[[2]], "Subject1", node.variables = list(community = c(rep(1,10), rep(2,10))))
show(Subject2)
GroupASamp = as_NetSample(GroupA, net.names = as.character(1:20) , node.variables = list(community = c(rep(1,10), rep(2,10))), sample.variables = list(group = rep(1, 20)))
show(GroupASamp)
Sub1Jackknifed <- net_apply(network = Subject1, net.function = "node_jackknife")
show(Sub1Jackknifed)
GroupAJackknifed <- net_apply(network = GroupASamp, net.function = "node_jackknife")
show(GroupAJackknifed)
GroupANetJackknifed <- net_apply(GroupASamp, net.function = "network_jackknife", net.function.args = list(network.variable = "community"))
show(GroupANetJackknifed)
Sub1JackknifedGlobEff <- net_stat_apply(Sub1Jackknifed, net.stat.fun = global_efficiency)
show(Sub1JackknifedGlobEff)
GroupAJackknifedGlobEff <- net_stat_apply(GroupAJackknifed, net.stat.fun = global_efficiency)
show(GroupAJackknifedGlobEff)
library(netjack)
data("GroupA")
Subject1 <- as_Net(GroupA[[i]], "Subject1")
show(Subject1)
Subject2 <- as_Net(GroupA[[2]], "Subject1", node.variables = list(community = c(rep(1,10), rep(2,10))))
show(Subject2)
GroupASamp = as_NetSample(GroupA, net.names = as.character(1:20) , node.variables = list(community = c(rep(1,10), rep(2,10))), sample.variables = list(group = rep(1, 20)))
show(GroupASamp)
Sub1Jackknifed <- net_apply(network = Subject1, net.function = "node_jackknife")
show(Sub1Jackknifed)
GroupAJackknifed <- net_apply(network = GroupASamp, net.function = "node_jackknife")
show(GroupAJackknifed)
GroupANetJackknifed <- net_apply(GroupASamp, net.function = "network_jackknife", net.function.args = list(network.variable = "community"))
show(GroupANetJackknifed)
Sub1JackknifedGlobEff <- net_stat_apply(Sub1Jackknifed, net.stat.fun = global_efficiency)
show(Sub1JackknifedGlobEff)
GroupAJackknifedGlobEff <- net_stat_apply(GroupAJackknifed, net.stat.fun = global_efficiency)
show(GroupAJackknifedGlobEff)
Sub1Data = to_data_frame(Sub1JackknifedGlobEff)
head(Sub1Data)
GroupAData = to_data_frame(GroupAJackknifedGlobEff)
head(GroupAData)
GroupASamp = as_NetSample(GroupA, net.names = as.character(1:20))
GroupAJackknifed = net_apply(GroupASamp, net.function = "node_jackknife")
GroupAJackknifedGlobEff = net_stat_apply(GroupASamp, net.stat.fun =  "global_efficiency")
GroupASamp = as_NetSample(GroupA, net.names = as.character(1:20))
GroupAJackknifed = net_apply(GroupASamp, net.function = "node_jackknife")
GroupAJackknifedGlobEff = net_stat_apply(GroupAJackknifed, net.stat.fun =  "global_efficiency")
diff_test(GroupAJackknifedGlobEff)
net_ggPlot(GroupAJackknifedGlobEff)
as_data_frame(GroupAJackknifedGlobEff)
to_data_frame(GroupAJackknifedGlobEff)
fullGroup = c(GroupA, GroupB)
fullSamp = as_NetSample(fullGroup, sample.variables = list(group = c(rep("GroupA", 20), rep("GroupB", 20))))
fullSamp = as_NetSample(fullGroup,net.names = 1:40, sample.variables = list(group = c(rep("GroupA", 20), rep("GroupB", 20))))
fullSamp = as_NetSample(fullGroup,net.names = as.character(1:40), sample.variables = list(group = c(rep("GroupA", 20), rep("GroupB", 20))))
fullSampJackknifed = net_apply(fullSamp, net.function = "node_jackknife")
fullSampleJackknifedGlobEff = net_stat_apply(fullSampJackknifed, net.stat.fun = "global_efficiency")
group_test(fullSampleJackknifedGlobEff)
group_test(fullSampleJackknifedGlobEff, grouping.variable = "group")
to_data_frame(fullSampleJackknifedGlobEff)
grouping.variable = "group"
form = paste0("nets.stat", "~", grouping.variable)
form
form = stats::as.formula(form)
group_test(fullSampleJackknifedGlobEff, grouping.variable = "group")
group_test(fullSampleJackknifedGlobEff, grouping.variable = "group",non.parametric = F)
library(netjack)
data("GroupA")
Subject1 <- as_Net(GroupA[[i]], "Subject1")
show(Subject1)
Subject2 <- as_Net(GroupA[[2]], "Subject1", node.variables = list(community = c(rep(1,10), rep(2,10))))
show(Subject2)
GroupASamp = as_NetSample(GroupA, net.names = as.character(1:20) , node.variables = list(community = c(rep(1,10), rep(2,10))), sample.variables = list(group = rep(1, 20)))
show(GroupASamp)
Sub1Jackknifed <- net_apply(network = Subject1, net.function = "node_jackknife")
show(Sub1Jackknifed)
GroupAJackknifed <- net_apply(network = GroupASamp, net.function = "node_jackknife")
show(GroupAJackknifed)
GroupANetJackknifed <- net_apply(GroupASamp, net.function = "network_jackknife", net.function.args = list(network.variable = "community"))
show(GroupANetJackknifed)
Sub1JackknifedGlobEff <- net_stat_apply(Sub1Jackknifed, net.stat.fun = global_efficiency)
show(Sub1JackknifedGlobEff)
GroupAJackknifedGlobEff <- net_stat_apply(GroupAJackknifed, net.stat.fun = global_efficiency)
show(GroupAJackknifedGlobEff)
Sub1Data = to_data_frame(Sub1JackknifedGlobEff)
names(Sub1Data)
GroupAData = to_data_frame(GroupAJackknifedGlobEff)
head(GroupAData)
GroupASamp = as_NetSample(GroupA, net.names = as.character(1:20))
GroupAJackknifed = net_apply(GroupASamp, net.function = "node_jackknife")
GroupAJackknifedGlobEff = net_stat_apply(GroupAJackknifed, net.stat.fun =  "global_efficiency")
diff_test(GroupAJackknifedGlobEff)
net_ggPlot(GroupAJackknifedGlobEff)
fullGroup = c(GroupA, GroupB)
fullSamp = as_NetSample(fullGroup,net.names = as.character(1:40), sample.variables = list(group = c(rep("GroupA", 20), rep("GroupB", 20))))
fullSampJackknifed = net_apply(fullSamp, net.function = "node_jackknife")
fullSampleJackknifedGlobEff = net_stat_apply(fullSampJackknifed, net.stat.fun = "global_efficiency")
group_test(fullSampleJackknifedGlobEff, grouping.variable = "group",non.parametric = F)
netGroup_ggPlot(fullSampleJackknifedGlobEff, grouping.variable="group")
library(netjack)
data("GroupA")
Subject1 <- as_Net(GroupA[[i]], "Subject1")
show(Subject1)
Subject2 <- as_Net(GroupA[[2]], "Subject1", node.variables = list(community = c(rep(1,10), rep(2,10))))
show(Subject2)
GroupASamp = as_NetSample(GroupA, net.names = as.character(1:20) , node.variables = list(community = c(rep(1,10), rep(2,10))), sample.variables = list(group = rep(1, 20)))
show(GroupASamp)
Sub1Jackknifed <- net_apply(network = Subject1, net.function = "node_jackknife")
show(Sub1Jackknifed)
GroupAJackknifed <- net_apply(network = GroupASamp, net.function = "node_jackknife")
show(GroupAJackknifed)
GroupANetJackknifed <- net_apply(GroupASamp, net.function = "network_jackknife", net.function.args = list(network.variable = "community"))
show(GroupANetJackknifed)
Sub1JackknifedGlobEff <- net_stat_apply(Sub1Jackknifed, net.stat.fun = global_efficiency)
show(Sub1JackknifedGlobEff)
GroupAJackknifedGlobEff <- net_stat_apply(GroupAJackknifed, net.stat.fun = global_efficiency)
show(GroupAJackknifedGlobEff)
Sub1Data = to_data_frame(Sub1JackknifedGlobEff)
names(Sub1Data)
GroupAData = to_data_frame(GroupAJackknifedGlobEff)
head(GroupAData)
GroupASamp = as_NetSample(GroupA, net.names = as.character(1:20))
GroupAJackknifed = net_apply(GroupASamp, net.function = "node_jackknife")
GroupAJackknifedGlobEff = net_stat_apply(GroupAJackknifed, net.stat.fun =  "global_efficiency")
diff_test(GroupAJackknifedGlobEff)
net_ggPlot(GroupAJackknifedGlobEff)
net_ggPlot(GroupAJackknifedGlobEff)
data("GroupA")
Subject1 <- as_Net(GroupA[[i]], "Subject1")
show(Subject1)
Subject2 <- as_Net(GroupA[[2]], "Subject1", node.variables = list(community = c(rep(1,10), rep(2,10))))
show(Subject2)
GroupASamp = as_NetSample(GroupA, net.names = as.character(1:20) , node.variables = list(community = c(rep(1,10), rep(2,10))), sample.variables = list(group = rep(1, 20)))
show(GroupASamp)
Sub1Jackknifed <- net_apply(network = Subject1, net.function = "node_jackknife")
show(Sub1Jackknifed)
GroupAJackknifed <- net_apply(network = GroupASamp, net.function = "node_jackknife")
show(GroupAJackknifed)
GroupANetJackknifed <- net_apply(GroupASamp, net.function = "network_jackknife", net.function.args = list(network.variable = "community"))
show(GroupANetJackknifed)
Sub1JackknifedGlobEff <- net_stat_apply(Sub1Jackknifed, net.stat.fun = global_efficiency)
show(Sub1JackknifedGlobEff)
GroupAJackknifedGlobEff <- net_stat_apply(GroupAJackknifed, net.stat.fun = global_efficiency)
show(GroupAJackknifedGlobEff)
Sub1Data = to_data_frame(Sub1JackknifedGlobEff)
names(Sub1Data)
GroupAData = to_data_frame(GroupAJackknifedGlobEff)
head(GroupAData)
GroupASamp = as_NetSample(GroupA, net.names = as.character(1:20))
GroupAJackknifed = net_apply(GroupASamp, net.function = "node_jackknife")
GroupAJackknifedGlobEff = net_stat_apply(GroupAJackknifed, net.stat.fun =  "global_efficiency")
diff_test(GroupAJackknifedGlobEff)
net_ggPlot(GroupAJackknifedGlobEff)
library(netjack)
data("GroupA")
Subject1 <- as_Net(GroupA[[i]], "Subject1")
show(Subject1)
Subject2 <- as_Net(GroupA[[2]], "Subject1", node.variables = list(community = c(rep(1,10), rep(2,10))))
show(Subject2)
GroupASamp = as_NetSample(GroupA, net.names = as.character(1:20) , node.variables = list(community = c(rep(1,10), rep(2,10))), sample.variables = list(group = rep(1, 20)))
show(GroupASamp)
Sub1Jackknifed <- net_apply(network = Subject1, net.function = "node_jackknife")
show(Sub1Jackknifed)
GroupAJackknifed <- net_apply(network = GroupASamp, net.function = "node_jackknife")
show(GroupAJackknifed)
GroupANetJackknifed <- net_apply(GroupASamp, net.function = "network_jackknife", net.function.args = list(network.variable = "community"))
show(GroupANetJackknifed)
Sub1JackknifedGlobEff <- net_stat_apply(Sub1Jackknifed, net.stat.fun = global_efficiency)
show(Sub1JackknifedGlobEff)
GroupAJackknifedGlobEff <- net_stat_apply(GroupAJackknifed, net.stat.fun = global_efficiency)
show(GroupAJackknifedGlobEff)
Sub1Data = to_data_frame(Sub1JackknifedGlobEff)
names(Sub1Data)
GroupAData = to_data_frame(GroupAJackknifedGlobEff)
head(GroupAData)
GroupASamp = as_NetSample(GroupA, net.names = as.character(1:20))
GroupAJackknifed = net_apply(GroupASamp, net.function = "node_jackknife")
GroupAJackknifedGlobEff = net_stat_apply(GroupAJackknifed, net.stat.fun =  "global_efficiency")
diff_test(GroupAJackknifedGlobEff)
net_ggPlot(GroupAJackknifedGlobEff)
fullGroup = c(GroupA, GroupB)
fullSamp = as_NetSample(fullGroup,net.names = as.character(1:40), sample.variables = list(group = c(rep("GroupA", 20), rep("GroupB", 20))))
fullSampJackknifed = net_apply(fullSamp, net.function = "node_jackknife")
fullSampleJackknifedGlobEff = net_stat_apply(fullSampJackknifed, net.stat.fun = "global_efficiency")
group_test(fullSampleJackknifedGlobEff, grouping.variable = "group")
netGroup_ggPlot(fullSampleJackknifedGlobEff, grouping.variable="group")
plot(1:10)
plot(10:1)
knitr::kable(head(mtcars, 10))
group_diff_test(fullSampleJackknifedGlobEff, grouping.variable = "group")
netGroupDiff_ggPlot(fullSampleJackknifedGlobEff, grouping.variable="group")
library(netjack)
devtools::build()
devtools::use_vignette("my-vignette")
rmarkdown::html_vignette
library(netjack)
library(netjack)
library(netjack)
data("GroupA")
library(netjack)
??net_apply
data(GroupA)
GroupA_Net = as_NetSample(GroupA, 1:20, node.variables = list(community = c(rep(1, 10), rep(2,10))),
sample.variables = list(group = c(rep(1, 10), rep(2,10))))
Jackknife_GroupA_Net = net_apply(GroupA_Net, node_jackknife)
library(netjack)
data(GroupA)
GroupA_Net = as_NetSample(GroupA, 1:20, node.variables = list(community = c(rep(1, 10), rep(2,10))),
sample.variables = list(group = c(rep(1, 10), rep(2,10))))
Jackknife_GroupA_Net = net_apply(GroupA_Net, node_jackknife)
show(Jackknife_GroupA_Net)
?factor
install.packages("devtools")
install.packages("roxygen2")
install.packages(c("ggplot2", "igraph", "braingraph", "Rdpack"))
install.packages("brainGraph")
install.packages("rmarkdown")
install.packages("pdflatex")
install.packages("pandoc")
devtools::use_build_ignore("README.md")
devtools::use_build_ignore("NEWS.md")
?t.test
